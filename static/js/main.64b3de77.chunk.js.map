{"version":3,"sources":["logo.svg","Testing.js","contexts/ThemeContext.js","components/Test2.js","components/Test1.js","components/UpButton.js","components/BootstrapNavBar.js","components/SemanticNavBar.js","components/NavBar.js","components/ThemeSelectors.js","components/TestButton.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Testing","className","ThemeContext","createContext","ThemeProvider","props","useState","theme","setTheme","Provider","value","children","Test2","useContext","Test1","UpButton","onClick","BootstrapNavBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","Divider","Form","inline","FormControl","type","placeholder","Button","variant","SemanticNavBar","state","handleItemClick","e","name","setState","activeItem","this","Menu","header","active","Component","NavBar","ThemeSelectors","TestButton","primary","color","selection","Selection","create","class","selectables","boundaries","on","inst","selected","oe","ctrlKey","metaKey","el","classList","remove","removeFromSelection","clearSelection","changed","removed","added","add","keepSelection","App","selectionEnabled","enable","disable","selectedElementsInstance","getSelection","src","logo","alt","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.64b3de77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\n\nfunction Testing() {\n  return (\n    <div className=\"Tesinggggg\">\n      <p className=\"test1\">testing 1</p>\n      <p className=\"test1\">testing 2</p>\n      <p className=\"test1\">testing 3</p>\n      <p className=\"test1\">testing 4</p>\n      <p className=\"test1\">testing 5</p>\n    </div>\n  );\n}\n\nexport default Testing;\n","import React, { useState, createContext } from 'react';\n\n\nexport const ThemeContext = createContext();\n\nexport const ThemeProvider = props => {\n  const [theme, setTheme] = useState(\"react-bootstrap\");\n\n  return (\n    <ThemeContext.Provider value={[theme, setTheme]}>\n      {props.children}\n    </ThemeContext.Provider>\n  )\n}","import React, { useContext } from 'react';\nimport {ThemeContext} from '../contexts/ThemeContext'\n\nconst Test2 = (props) => {\n  const [theme, setTheme] = useContext(ThemeContext);\n\n  return (\n    <p>\n      {theme}\n    </p>\n  )\n}\n\n\nexport default Test2;","import React from 'react';\nimport Test2 from './Test2';\n\nconst Test1 = (props) => {\n\n  return (\n    <div>\n      testing1\n      <Test2 />\n    </div>\n  )\n}\n\n\nexport default Test1;","import React, { useContext } from 'react';\nimport { ThemeContext } from '../contexts/ThemeContext';\n\nconst UpButton = () => {\n  const [theme, setTheme] = useContext(ThemeContext);\n\n  return (\n    <button onClick={() => setTheme(\"react-semantic\")}>{theme}</button>\n  )\n}\n\nexport default UpButton;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\n\nconst BootstrapNavBar = () => {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#home\">Home</Nav.Link>\n          <Nav.Link href=\"#link\">Link</Nav.Link>\n          <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n        <Form inline>\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n          <Button variant=\"outline-success\">Search</Button>\n        </Form>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n};\n\nexport default BootstrapNavBar;","import React, { Component } from 'react'\nimport { Menu } from 'semantic-ui-react'\n\nexport default class SemanticNavBar extends Component {\n  state = {}\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <Menu>\n        <Menu.Item header>Our Company</Menu.Item>\n        <Menu.Item\n          name='aboutUs'\n          active={activeItem === 'aboutUs'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Item\n          name='jobs'\n          active={activeItem === 'jobs'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Item\n          name='locations'\n          active={activeItem === 'locations'}\n          onClick={this.handleItemClick}\n        />\n      </Menu>\n    )\n  }\n}\n\n// import React from 'react';\n// import { Menu } from 'semantic-ui-react';\n\n// const SemanticNavBar = () => {\n//   state = {}\n\n//   handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n//   render() {\n//     const { activeItem } = this.state\n\n//     return (\n//       <Menu>\n//         <Menu.Item header>Our Company</Menu.Item>\n//         <Menu.Item\n//           name='aboutUs'\n//           active={activeItem === 'aboutUs'}\n//           onClick={this.handleItemClick}\n//         />\n//         <Menu.Item\n//           name='jobs'\n//           active={activeItem === 'jobs'}\n//           onClick={this.handleItemClick}\n//         />\n//         <Menu.Item\n//           name='locations'\n//           active={activeItem === 'locations'}\n//           onClick={this.handleItemClick}\n//         />\n//       </Menu>\n//     )\n//   }\n// };\n\n// export default SemanticNavBar;","import React, { useContext } from 'react';\n\nimport BootstrapNavbar from './BootstrapNavBar';\nimport SemanticNavBar from './SemanticNavBar';\n\nimport { ThemeContext } from '../contexts/ThemeContext';\n\nconst NavBar = () => {\n  const [theme, setTheme] = useContext(ThemeContext);\n\n  return (\n    <div>\n      { theme === 'react-semantic' && <SemanticNavBar /> }\n      { theme === 'react-bootstrap' && <BootstrapNavbar /> }\n    </div>\n  )\n};\n\nexport default NavBar;","import React, { useContext } from 'react';\nimport { ThemeContext } from '../contexts/ThemeContext';\n\n\nconst ThemeSelectors = () => {\n  const [theme, setTheme] = useContext(ThemeContext);\n\n  return (\n    <div>\n      <button onClick={() => setTheme('react-semantic')}>React-Semantic</button>\n      <button onClick={() => setTheme('material-ui')}>Material-UI</button>\n      <button onClick={() => setTheme('react-bootstrap')}>React-Bootstrap</button>\n    </div>\n  )\n}\n\nexport default ThemeSelectors;","import React, { useContext } from 'react';\n\nimport { Button as SButton } from 'semantic-ui-react';\nimport { Button as MButton } from '@material-ui/core';\nimport { Button as BButton } from 'react-bootstrap';\n\nimport { ThemeContext } from '../contexts/ThemeContext';\n\n\nconst TestButton = () => {\n  const [theme, setTheme] = useContext(ThemeContext);\n\n  return (\n    <div>\n      { theme === 'react-semantic' && <SButton primary>Primary</SButton> }\n      { theme === 'material-ui' && <MButton variant=\"contained\" color=\"primary\">Primary</MButton> }\n      { theme === 'react-bootstrap' && <BButton variant=\"primary\">Primary</BButton> }\n    </div>\n  )\n}\n\nexport default TestButton;","import React from 'react';\n\nimport Selection from '@simonwep/selection-js';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport Testing from './Testing';\nimport Test1 from './components/Test1';\nimport UpButton from './components/UpButton';\nimport NavBar from './components/NavBar';\nimport ThemeSelectors from './components/ThemeSelectors';\nimport TestButton from './components/TestButton';\n\nimport { ThemeProvider } from './contexts/ThemeContext';\n\n\nconst selection = Selection.create({\n  class: 'selection',\n  selectables: ['.test', '.App-logo', '.test1'],\n  boundaries: ['.App'],\n}).on('start', ({inst, selected, oe}) => {\n  // Remove class if the user isn't pressing the control key or ⌘ key\n  if (!oe.ctrlKey && !oe.metaKey) {\n    // Unselect all elements\n    for (const el of selected) {\n      el.classList.remove('selected');\n      inst.removeFromSelection(el);\n    }\n    // Clear previous selection\n    inst.clearSelection();\n  }\n}).on('move', ({changed: {removed, added}}) => {\n  // Add a custom class to the elements that where selected.\n  for (const el of added) {\n    el.classList.add('selected');\n  }\n  // Remove the class from elements that where removed\n  // since the last selection\n  for (const el of removed) {\n    el.classList.remove('selected');\n  }\n}).on('stop', ({inst}) => {\n  inst.keepSelection();\n});\n\nclass App extends React.Component {\n  state = {\n    selectionEnabled: true\n  };\n\n  render() {\n    this.state.selectionEnabled ? selection.enable() : selection.disable();\n\n    return (\n      <ThemeProvider>\n        <div className={`App ${this.state.selectionEnabled ? 'selection-enabled' : 'selection-disabled' }`}>\n          <NavBar />\n          <Test1 />\n          <UpButton />\n          <ThemeSelectors />\n          <TestButton />\n          <header className=\"App-header\">\n            <button onClick={() => {\n              selection.enable();\n              this.setState({ selectionEnabled: true });\n            }}>Enable</button>\n            <button onClick={() => {\n              const selectedElementsInstance = [...selection.getSelection()]\n              for (const el of selectedElementsInstance) {\n                el.classList.remove('selected');\n                selection.removeFromSelection(el);\n              }\n              selection.clearSelection();\n              selection.disable();\n              this.setState({ selectionEnabled: false });\n            }}>Disable</button>\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <div className=\"testing-boundary\">\n              <p className=\"test\">testing 1</p>\n              <p className=\"test\">testing 2</p>\n              <p className=\"test\">testing 3</p>\n              <p className=\"test\">testing 4</p>\n              <p className=\"test\">testing 5</p>\n              <p className=\"test\">testing 2</p>\n              <p className=\"test\">testing 3</p>\n              <p className=\"test\">testing 4</p>\n              <p className=\"test\">testing 5</p>\n              <p className=\"test\">testing 2</p>\n              <p className=\"test\">testing 3</p>\n              <p className=\"test\">testing 4</p>\n              <p className=\"test\">testing 5</p>\n              <p className=\"test\">testing 2</p>\n              <p className=\"test\">testing 3</p>\n              <p className=\"test\">testing 4</p>\n              <p className=\"test\">testing 5</p>\n            </div>\n            <div className=\"test-div\">\n              <p className=\"testing1\">testing <span className=\"testing2\">6</span></p>\n            </div>\n          </header>\n          <Testing />\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}